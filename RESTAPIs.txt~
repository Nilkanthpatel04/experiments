
GET /gemfire-api/v1/queries/adhoc?q=<OQL-statement>
run an unnamed (unidentified), ad-hoc query passed as a URL parameter,


http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT firstName, gender, cars from /People

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT firstName, gender, cars from /People Where id= '101'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT cars from /People

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT cars from /People where gender = 'MALE'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT id, cars from /People 

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People 

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People where id = '101'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People where firstName = 'Angita'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People where gender= 'MALE'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People p where p.Address.permanent.city= 'Lunawada'

http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People p where p.Address.present.streetName= 'Tingrenagar'

//All the people having Bank account in 'SBI'
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * FROM /People p1 WHERE p1.id IN (SELECT p2.id FROM /People p2, p2.account acc WHERE acc.bankName =  'SBI' )

//Name and Address of the Peoplea having Bank account in 'SBI'
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT p1.firstName, p1.Address FROM /People p1 WHERE p1.id IN (SELECT p2.id FROM /People p2, p2.account acc WHERE acc.bankName =  'SBI' )

// Name and Car details of Person having bank account in 'Axis'
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT p1.firstName, p1.cars FROM /People p1 WHERE p1.id IN (SELECT p2.id FROM /People p2, p2.account acc WHERE acc.bankName =  'Axis' )

//All Persons having tata car
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT * from /People p where p.cars.contains('tata')

//present Address of all peoples having either audi or honda car.
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT Address.present from /People p where p.cars.contains('audi') OR p.cars.contains('honda')

//Find All Bank Names, Account numbers having car 'tata'
http://localhost:8080/gemfire-api/v1/queries/adhoc?q=SELECT acc.bankName, acc.accNumber FROM /People AS p2, p2.account acc WHERE p2.cars.contains('tata')

---------------------------------------------------------------------------------------------------------------------------------------------------------------
POST /gemfire-api/v1/queries?id=<queryId>&q=<OQL-statement>
prepare the specified parameterized query and assign the corresponding ID for lookup,

1. 
http://localhost:8080/gemfire-api/v1/queries?id=findAllPeople&q=SELECT * FROM /People

2. findAllMales
http://localhost:8080/gemfire-api/v1/queries?id=filterByGender&q=SELECT * from /People where gender= $1

3. filerByBank
http://localhost:8080/gemfire-api/v1/queries?id=filterByBank&q=SELECT * FROM /People p1 WHERE p1.id IN (SELECT p2.id FROM /People p2, p2.account acc WHERE acc.bankName =  $1 )

----------------------------------------------------------------------------------------------------------------------------------------------------------------
GET /gemfire-api/v1/queries/{query}?args=value1,value2,...,valueN
run the specified named query passing in scalar values for query parameters,

http://localhost:8080/gemfire-api/v1/queries/findAllPeople?args=dummy

http://localhost:8080/gemfire-api/v1/queries/filterByGender?args=MALE

http://localhost:8080/gemfire-api/v1/queries/filterByBank?args=SBI

----------------------------------------------------------------------------------------------------------------------------------------------------------------
Functions
----------
1. list all functions available in the GemFire cluster, e.g. GET https://localhost:8080/gemfire-api/v1/functions

http://localhost:8080/gemfire-api/v1/functions

[
    {
        "rel": "GetRegions",
        "href": "http://localhost:8080/gemfire-api/v1/functions/GetRegions"
    },
    {
        "rel": "GetValueForKey",
        "href": "http://localhost:8080/gemfire-api/v1/functions/GetValueForKey"
    },
    {
        "rel": "GetAllEntries",
        "href": "http://localhost:8080/gemfire-api/v1/functions/GetAllEntries"
    },
    {
        "rel": "PutKeyFunction",
        "href": "http://localhost:8080/gemfire-api/v1/functions/PutKeyFunction"
    }
]

2. execute function with arguments on regions, members, or group(s)
POST /gemfire-api/v1/functions/{functionId}?args=value1,value2,...,valueN[&onRegions=region1,region2,...,regionN|&onMembers=member1,member2,...,memberN|&onGroups=group1,group2,...,groupN]

http://localhost:8080/gemfire-api/v1/functions/GetRegions
java.lang.IllegalArgumentException: The input args for the execute function request is null
    at com.gemstone.gemfire.internal.cache.execute.MemberFunctionExecutor.withArgs(MemberFunctionExecutor.java:213)

http://localhost:8080/gemfire-api/v1/functions/GetRegions?args=null
[
  "region1",
  "People"
]

http://localhost:8080/gemfire-api/v1/functions/GetValueForKey?args=2

10

http://localhost:8080/gemfire-api/v1/functions/GetAllEntries?args=1

[
    {
        "k11": "v1",
        "k15": "v5",
        "k14": "v4",
        "k13": "v3",
        "k12": "v2"
    }
]





